ARG NODE_VERSION=20-alpine
FROM node:${NODE_VERSION} AS base
RUN apk add --no-cache libc6-compat git
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile
COPY . .
ARG PROJECT
RUN pnpm build --filter=${PROJECT}

FROM node:${NODE_VERSION} AS runner
RUN addgroup nodejs && adduser -S -G nodejs nextjs
WORKDIR /app

ARG PROJECT

# Copy build output based on the project type
# For Next.js web app
RUN if [ "$PROJECT" = "web" ]; then \
  cp -r /app/apps/web/.next/standalone/* /app; \
elif [ "$PROJECT" = "server" ]; then \
  mkdir -p /app/dist && cp -r /app/apps/server/dist/* /app/dist/; \
fi

USER nextjs
ENV NODE_ENV=production
ENV PORT=3000

EXPOSE 3000

# Adjust CMD depending on project
CMD if [ "$PROJECT" = "web" ]; then \
      node server.js; \
    else \
      node dist/main; \
    fi
